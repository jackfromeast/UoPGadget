{
    "source": "/home/ubuntu/PPAEG/expoSE+/tests/template_engines/pug/app.js",
    "start": 1684188188129,
    "end": 1684188210947,
    "undefinedMap": {
        "{\"_bound\":0,\"line_undef_t\":\"undefined\"}": [
            "keyword",
            "beforeExpr",
            "isLoop",
            "isAssign",
            "prefix",
            "postfix",
            "binop",
            "startsExpr",
            "1",
            "rightAssociative",
            "enumerable",
            "BABEL_TYPES_8_BREAKING",
            "inherits",
            "builder",
            "deprecatedAlias",
            "Standardized",
            "Expression",
            "validate",
            "default",
            "Binary",
            "aliases",
            "visitor",
            "Scopable",
            "BlockParent",
            "Block",
            "Statement",
            "Terminatorless",
            "CompletionStatement",
            "Conditional",
            "fields",
            "Loop",
            "While",
            "ExpressionWrapper",
            "For",
            "ForXStatement",
            "Function",
            "FunctionParent",
            "Pureish",
            "Declaration",
            "PatternLike",
            "LVal",
            "TSEntityName",
            "Literal",
            "Immutable",
            "optional",
            "UserWhitespacable",
            "Method",
            "ObjectMember",
            "Property",
            "UnaryLike",
            "Pattern",
            "Class",
            "ModuleDeclaration",
            "ExportDeclaration",
            "ModuleSpecifier",
            "Accessor",
            "Private",
            "Flow",
            "FlowType",
            "FlowBaseAnnotation",
            "FlowDeclaration",
            "FlowPredicate",
            "EnumBody",
            "EnumMember",
            "JSX",
            "Miscellaneous",
            "TypeScript",
            "TSTypeElement",
            "TSType",
            "TSBaseType",
            "VariableDeclaration",
            "FunctionDeclaration",
            "ClassDeclaration",
            "TryStatement",
            "ImportDefaultSpecifier",
            "ImportSpecifier",
            "ImportNamespaceSpecifier",
            "Identifier",
            "ThisExpression",
            "ReturnStatement",
            "filename",
            "plugins",
            "10",
            "9",
            "8",
            "7",
            "override",
            "startLoc",
            "endLoc",
            "lastTokEndLoc",
            "0",
            "sourceType",
            "sourceFilename",
            "startColumn",
            "startLine",
            "allowAwaitOutsideFunction",
            "allowReturnOutsideFunction",
            "allowImportExportEverywhere",
            "allowSuperOutsideMethod",
            "allowUndeclaredExports",
            "strictMode",
            "ranges",
            "tokens",
            "createParenthesizedExpressions",
            "errorRecovery",
            "attachComment",
            "exportedIdentifiers",
            "inModule",
            "scope",
            "prodParam",
            "classScope",
            "expressionScope",
            "extra",
            "binding",
            "checkClashes",
            "strictModeChanged",
            "allowingSloppyLetBinding",
            "hasParenthesizedAncestor",
            "val",
            "File",
            "-1",
            "Program",
            "ExpressionStatement",
            "LogicalExpression",
            "typeAnnotation",
            "decorators",
            "ObjectExpression",
            "Symbol(locals)",
            "EmptyStatement",
            "AssignmentExpression",
            "NumericLiteral",
            "BinaryExpression",
            "StringLiteral",
            "CallExpression",
            "MemberExpression",
            "ConditionalExpression",
            "NullLiteral",
            "typeParameters",
            "typeArguments"
        ],
        "{\"line_undef_t\":\"string\",\"_bound\":1,\"line_undef\":\"xxx\"}": [
            "reflect"
        ]
    },
    "done": [
        {
            "id": 0,
            "input": {
                "_bound": 0,
                "line_undef_t": "undefined"
            },
            "stringifiedPC": "",
            "foundGagdet": false,
            "alternatives": [
                {
                    "input": {
                        "line_undef_t": "string",
                        "_bound": 1
                    },
                    "pc": "",
                    "forkIid": 193
                }
            ],
            "time": 5426
        },
        {
            "id": 1,
            "input": {
                "line_undef_t": "string",
                "_bound": 1,
                "line_undef": "xxx"
            },
            "stringifiedPC": "(= line_undef_t \"string\"),(not (= line_undef \"\")),(< 0.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(not (>= 0.0\n         (to_real (str.len (str.++ \"\"\n                                   \";pug_debug_line = 1;\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + \"\"<h1>\"\";\"\n                                   \"\\n\"\n                                   \";pug_debug_line = 1;\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                                   \"\\n\"\n                                   \";pug_debug_line = \"\n                                   line_undef\n                                   \";\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                                   \"\"))))),(< 1.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 2.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 3.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 4.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 5.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 6.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 7.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 8.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(< 8.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(not (>= 8.0\n         (to_real (str.len (str.++ \"\"\n                                   \";pug_debug_line = 1;\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + \"\"<h1>\"\";\"\n                                   \"\\n\"\n                                   \";pug_debug_line = 1;\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                                   \"\\n\"\n                                   \";pug_debug_line = \"\n                                   line_undef\n                                   \";\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                                   \"\"))))),(< 9.0\n   (to_real (str.len (str.++ \"\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"<h1>\"\";\"\n                             \"\\n\"\n                             \";pug_debug_line = 1;\"\n                             \"\\n\"\n                             \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                             \"\\n\"\n                             \";pug_debug_line = \"\n                             line_undef\n                             \";\"\n                             \"\\n\"\n                             \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                             \"\")))),(not (>= 9.0\n         (to_real (str.len (str.++ \"\"\n                                   \";pug_debug_line = 1;\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + \"\"<h1>\"\";\"\n                                   \"\\n\"\n                                   \";pug_debug_line = 1;\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? \"\"\"\" : pug_interp));\"\n                                   \"\\n\"\n                                   \";pug_debug_line = \"\n                                   line_undef\n                                   \";\"\n                                   \"\\n\"\n                                   \"pug_html = pug_html + \"\"ndefine</h1>\"\";\"\n                                   \"\")))))",
            "foundGagdet": false,
            "alternatives": [
                {
                    "input": {
                        "line_undef_t": "string",
                        "line_undef": "",
                        "_bound": 2
                    },
                    "pc": "",
                    "forkIid": 336
                }
            ],
            "time": 9853
        },
        {
            "id": 2,
            "input": {
                "line_undef_t": "string",
                "line_undef": "",
                "_bound": 2
            },
            "stringifiedPC": "(= line_undef_t \"string\"),(not (not (= line_undef \"\")))",
            "foundGagdet": false,
            "alternatives": [],
            "time": 6653
        }
    ]
}