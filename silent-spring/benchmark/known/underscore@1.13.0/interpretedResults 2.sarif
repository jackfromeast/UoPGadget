{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.14.0",
        "rules" : [ {
          "id" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
          "name" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
          "shortDescription" : {
            "text" : "PrototypePollutingGadgetTemplate"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "id" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
            "kind" : "path-problem",
            "name" : "PrototypePollutingGadgetTemplate",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        } ]
      }
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "amd/template.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "cjs/template.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "modules/template.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "underscore-node-f.cjs",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    } ],
    "results" : [ {
      "ruleId" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
        "index" : 0
      },
      "message" : {
        "text" : "[template](1) (amd/template.js) -> \\[\\] -> [Function](2)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "amd/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 29,
            "startColumn" : 3,
            "endLine" : 84,
            "endColumn" : 4
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d7bc403424ac169:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "amd/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 0
                },
                "region" : {
                  "startLine" : 29,
                  "startColumn" : 3,
                  "endLine" : 84,
                  "endColumn" : 4
                }
              },
              "message" : {
                "text" : "functio ... te;\\n  } | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "amd/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 0
                },
                "region" : {
                  "startLine" : 69,
                  "startColumn" : 29,
                  "endColumn" : 46
                }
              },
              "message" : {
                "text" : "settings.variable #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "amd/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 0
                },
                "region" : {
                  "startLine" : 69,
                  "startColumn" : 29,
                  "endColumn" : 55
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "amd/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 0
                },
                "region" : {
                  "startLine" : 29,
                  "startColumn" : 3,
                  "endLine" : 84,
                  "endColumn" : 4
                }
              },
              "message" : {
                "text" : "functio ... te;\\n  } | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "amd/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 0
                },
                "region" : {
                  "startLine" : 69,
                  "startColumn" : 29,
                  "endColumn" : 46
                }
              },
              "message" : {
                "text" : "settings.variable | #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "amd/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 0
                },
                "region" : {
                  "startLine" : 69,
                  "startColumn" : 29,
                  "endColumn" : 55
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "amd/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 29,
            "startColumn" : 3,
            "endLine" : 84,
            "endColumn" : 4
          }
        },
        "message" : {
          "text" : "template"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "amd/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 69,
            "startColumn" : 29,
            "endColumn" : 55
          }
        },
        "message" : {
          "text" : "Function"
        }
      } ]
    }, {
      "ruleId" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
        "index" : 0
      },
      "message" : {
        "text" : "[template](1) (cjs/template.js) -> \\[\\] -> [Function](2)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "cjs/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 31,
            "endLine" : 86,
            "endColumn" : 2
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d7bc403424ac169:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "cjs/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 1
                },
                "region" : {
                  "startLine" : 31,
                  "endLine" : 86,
                  "endColumn" : 2
                }
              },
              "message" : {
                "text" : "functio ... late;\\n} | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "cjs/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 1
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 44
                }
              },
              "message" : {
                "text" : "settings.variable #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "cjs/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 1
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 53
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "cjs/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 1
                },
                "region" : {
                  "startLine" : 31,
                  "endLine" : 86,
                  "endColumn" : 2
                }
              },
              "message" : {
                "text" : "functio ... late;\\n} | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "cjs/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 1
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 44
                }
              },
              "message" : {
                "text" : "settings.variable | #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "cjs/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 1
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 53
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "cjs/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 31,
            "endLine" : 86,
            "endColumn" : 2
          }
        },
        "message" : {
          "text" : "template"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "cjs/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 27,
            "endColumn" : 53
          }
        },
        "message" : {
          "text" : "Function"
        }
      } ]
    }, {
      "ruleId" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
        "index" : 0
      },
      "message" : {
        "text" : "[template](1) (modules/template.js) -> \\[\\] -> [Function](2)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "modules/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 16,
            "endLine" : 86,
            "endColumn" : 2
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dee0072ea6825250:1",
        "primaryLocationStartColumnFingerprint" : "15"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "modules/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 2
                },
                "region" : {
                  "startLine" : 31,
                  "startColumn" : 16,
                  "endLine" : 86,
                  "endColumn" : 2
                }
              },
              "message" : {
                "text" : "functio ... late;\\n} | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "modules/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 2
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 44
                }
              },
              "message" : {
                "text" : "settings.variable #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "modules/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 2
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 53
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "modules/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 2
                },
                "region" : {
                  "startLine" : 31,
                  "startColumn" : 16,
                  "endLine" : 86,
                  "endColumn" : 2
                }
              },
              "message" : {
                "text" : "functio ... late;\\n} | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "modules/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 2
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 44
                }
              },
              "message" : {
                "text" : "settings.variable | #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "modules/template.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 2
                },
                "region" : {
                  "startLine" : 71,
                  "startColumn" : 27,
                  "endColumn" : 53
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "modules/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 16,
            "endLine" : 86,
            "endColumn" : 2
          }
        },
        "message" : {
          "text" : "template"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "modules/template.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 27,
            "endColumn" : 53
          }
        },
        "message" : {
          "text" : "Function"
        }
      } ]
    }, {
      "ruleId" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "js/prototype-polluting-gadget-zhengyu revised by Zhengyu Liu target codebases are template engine Find flows from 1. any exported functions to undefined property read 2. from undefined property read to eval-like function sink(internal function for silent-spring) Use multi-labels to track: 1. callflow for nodes within an exported function 2. polluted for nodes that derived from undefined property read 3. receiver for nodes that represent a object that contains an polluted property To run this script on different codebase: 1. specific the source code path in line 38 2. set the underfined property name in line 250",
        "index" : 0
      },
      "message" : {
        "text" : "[template](1) (underscore-node-f.cjs) -> \\[\\] -> [Function](2)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "underscore-node-f.cjs",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 868,
            "endLine" : 923,
            "endColumn" : 2
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d7bc403424ac169:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "underscore-node-f.cjs",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 868,
                  "endLine" : 923,
                  "endColumn" : 2
                }
              },
              "message" : {
                "text" : "functio ... late;\\n} | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "underscore-node-f.cjs",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 908,
                  "startColumn" : 27,
                  "endColumn" : 44
                }
              },
              "message" : {
                "text" : "settings.variable #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "underscore-node-f.cjs",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 908,
                  "startColumn" : 27,
                  "endColumn" : 53
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "underscore-node-f.cjs",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 868,
                  "endLine" : 923,
                  "endColumn" : 2
                }
              },
              "message" : {
                "text" : "functio ... late;\\n} | #callflow"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "underscore-node-f.cjs",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 908,
                  "startColumn" : 27,
                  "endColumn" : 44
                }
              },
              "message" : {
                "text" : "settings.variable | #polluted"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "underscore-node-f.cjs",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 3
                },
                "region" : {
                  "startLine" : 908,
                  "startColumn" : 27,
                  "endColumn" : 53
                }
              },
              "message" : {
                "text" : "setting ... | 'obj' | #polluted #receiver"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "underscore-node-f.cjs",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 868,
            "endLine" : 923,
            "endColumn" : 2
          }
        },
        "message" : {
          "text" : "template"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "underscore-node-f.cjs",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 908,
            "startColumn" : 27,
            "endColumn" : 53
          }
        },
        "message" : {
          "text" : "Function"
        }
      } ]
    } ],
    "columnKind" : "utf16CodeUnits",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}